// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QianShiChat.Server.Models.Entities;

namespace QianShiChat.Server.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20211014080223_Rename-Tb_DirectMessage")]
    partial class RenameTb_DirectMessage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.ApplyFor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("申请表主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("申请时间");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint")
                        .HasComment("被申请群组");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("最后修改时间");

                    b.Property<string>("Remark")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasComment("申请备注");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("申请状态 1 已申请 2 已通过 3 已驳回 4 已忽略 ");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int")
                        .HasComment("被申请用户");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("申请类型 1 用户 2 群组");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("申请用户");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ToUserId");

                    b.HasIndex("UserId");

                    b.ToTable("apply_for");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.ChatGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("群组表主键");

                    b.Property<string>("Avatar")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("群头像");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasComment("软删除");

                    b.Property<string>("NickName")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("群昵称");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("chat_group");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.DirectMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("私信表主键");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasComment("内容");

                    b.Property<int>("ContentType")
                        .HasColumnType("int")
                        .HasComment("内容类型 1 文字  2 图片");

                    b.Property<int>("CreateTime")
                        .HasColumnType("int")
                        .HasComment("发送时间");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否已读");

                    b.Property<int>("Receiver")
                        .HasColumnType("int")
                        .HasComment("接收者");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasComment("发送者");

                    b.HasKey("Id");

                    b.HasIndex("Receiver");

                    b.HasIndex("SenderId");

                    b.ToTable("direct_message");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.Online", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("在线表主键");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("用户编号");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("online");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasComment("用户表主键");

                    b.Property<string>("Avatar")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasComment("用户头像");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasComment("用户昵称");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("登录密码");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasComment("用户登录名");

                    b.HasKey("Id");

                    b.ToTable("userinfo");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.UserRelationship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("用户关系表主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasComment("关注时间");

                    b.Property<long>("FocusId")
                        .HasColumnType("bigint")
                        .HasComment("关注的编号");

                    b.Property<sbyte>("FocusType")
                        .HasColumnType("tinyint")
                        .HasComment("关注类型 1 用户 2 群组");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasComment("软删除");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("用户");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_relationship");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.Online", b =>
                {
                    b.HasOne("QianShiChat.Server.Models.Entities.UserInfo", "UserInfo")
                        .WithMany("Onlines")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("QianShiChat.Server.Models.Entities.UserInfo", b =>
                {
                    b.Navigation("Onlines");
                });
#pragma warning restore 612, 618
        }
    }
}
